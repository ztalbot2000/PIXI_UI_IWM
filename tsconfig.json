{
   "compilerOptions": {
      // Target latest version of ECMAScript.
      "target": "es5",

      // mimic the Node.js module resolution mechanism at runtime
      "moduleResolution": "node",

      // For Generator functions
      // (Ones like: static *doiit ( ... ): Generator<Date,number, boolean
      "downlevelIteration": true,

      // Process & infer types from .js files.
      "allowJs": true,

      // Report errors in .js files. Use in conjunction with --allowJs.
      "checkJs": true,

      // Generates corresponding .map file.
      "sourceMap": true,

      // Remove all comments except copy-right header comments beginning with
      // Slash/Star *
      "removeComments": false,

      // Enable all strict tests.
      "strict": true,

      // Raise error on expressions and declarations with an implied any type.
      "noImplicitAny": true,

      // Report errors on unused locals.
      "noUnusedLocals": true,

      // Report errors on unused parameters.
      "noUnusedParameters": true,

      // Report an error when not all code paths in function return a value.
      "noImplicitReturns": true,

      // In strict null checking mode, the null and undefined values are not in the domain of every type and are only assignable to themselves and any (the one exception being that undefined is also assignable to void).
      "strictNullChecks": false,

      // Common root directories to follow
      "rootDirs": ["src", "test"],

      // Redirect output structure to the directory
      "outDir": "js",

      // Generate corresponding map files. Default is: false
      "sourceMap": true,

      // Use specified line feed as lf (unix)
      "newLine": "lf",

      // Default is False
      "noEmit": false,

      // Output colors. Default is true, except when piping.  Does this override piping???
      "pretty": true,

      // Print names of typed files used. Default is false.
      //"listFiles": true,

      // Print names of all compiled files. Default is false.
      // This is a good way to check what files are being exposed to the type checking
      // command 'tsc', which is run by the script tag of the package.json file and not webpack.
      //"listEmittedFiles": true,

      // Does incremental compiles
      "incremental": true,

      // Incremental compile is placed in <thisfile>
      "tsBuildInfoFile": "./js/tsbuildinfo",

      //  provide a shim to ensure compatibility in the emitted JavaScript
      // Fixes: eventEmitter3 - can only be default-imported using the 'esModuleInterop' flag

      "esModuleInterop": true,
   },
   "include": [
      "src",
      // - Adding "test" here compiled uitry,
      //   no matter what I tried to exclude
   ],
   "exclude": [
      "/node_modules/"
   ]
}
